* Tasks

** TODO [#C]Clean up movie list (to table?) ::filmgrammar:ucb:research:code:work:
:Created: [2016-11-28 Mon 15:33]

** TODO [#B] convert movies to playable format ::filmgrammar:ucb:research:code:work:
:Created: [2016-11-21 Mon 19:46]

** TODO [#A] confirm movies play if in webm format ::filmgrammar:ucb:research:code:work:
:Created: [2016-11-21 Mon 19:46]

** TODO [#A] Add 'next group' and 'previous group' to range limited tables. ::filmgrammar:ucb:research:code:work:
:Created: [2016-11-21 Mon 19:45]

** DONE [#B] batch serve the shots in groups of 50 ::filmgrammar:ucb:research:code:work:
CLOSED: [2016-11-21 Mon 19:45] SCHEDULED: <2016-11-21 Mon>
:Created: [2016-11-21 Mon 18:42]

** DONE [#B] Put classifications in tables ::filmgrammar:ucb:research:code:work:
CLOSED: [2016-11-28 Mon 15:26] SCHEDULED: <2016-11-21 Mon>
:Created: [2016-11-21 Mon 18:41]

** DONE [#A] backend bulk package load script ::filmgrammar:ucb:research:code:work:
CLOSED: [2016-11-21 Mon 18:37] SCHEDULED: <2016-11-11 Fri>

:Created: [2016-11-11 Fri 16:00]

** DONE [#A] backend package load script ::filmgrammar:ucb:research:code:work:
CLOSED: [2016-11-21 Mon 18:37] SCHEDULED: <2016-11-11 Fri>
:Created: [2016-11-11 Fri 15:32]

** TODO [#A] should n/a and ELS be the same? How to fix numbering?  :refactor:filmgrammar:ucb:research:code:work:
SCHEDULED: <2016-11-22 Tue>
:Created: [2016-11-07 Mon 18:02]

** DONE [#B] fix 'mean of empty slice' by just returning 0 :test:filmgrammar:ucb:research:code:work:
CLOSED: [2016-11-28 Mon 15:36] SCHEDULED: <2016-11-21 Mon>
:Created: [2016-11-07 Mon 18:02]

** DONE [#B] If no movie is found, it should be handled gracefully. (check loaders, especially frameloader) :story:filmgrammar:ucb:research:code:work:
CLOSED: [2016-11-21 Mon 18:38]
:Created: [2016-11-04 Fri 13:09]

** TODO [#B] movie getter, especially for use in testing :refactor:filmgrammar:ucb:research:code:work:
:Created: [2016-11-03 Thu 18:05]

** DONE [#B] BatchPackageLoader.load loads all packages in root directory :test:filmgrammar:ucb:research:code:work:
CLOSED: [2016-11-03 Thu 19:46] SCHEDULED: <2016-11-03 Thu>
:Created: [2016-11-03 Thu 17:39]

** DONE [#B] BatchPackageLoader.get_directories returns all and only directories :test:filmgrammar:ucb:research:code:work:
CLOSED: [2016-11-03 Thu 18:01] SCHEDULED: <2016-11-03 Thu>
:Created: [2016-11-03 Thu 17:39]

** DONE [#B] batchPackageLoader.is_directory :test:filmgrammar:ucb:research:code:work:
CLOSED: [2016-11-03 Thu 17:46] SCHEDULED: <2016-11-03 Thu>
:Created: [2016-11-03 Thu 17:38]

** DONE [#A]fix static on aion         ::filmgrammar:ucb:research:code:work:
CLOSED: [2016-11-02 Wed 20:31] SCHEDULED: <2016-11-02 Wed>
:Created: [2016-11-02 Wed 14:37]

** DONE [#B] test             :DELETE_ME:filmgrammar:ucb:research:code:work:
CLOSED: [2016-11-02 Wed 20:32]
:Created: [2016-11-01 Tue 23:13]

** TODO [#C] urls.py               :test:filmgrammar:ucb:research:code:work:
:Created: [2016-11-01 Tue 23:05]

** TODO [#C] forms.py              :test:filmgrammar:ucb:research:code:work:
:Created: [2016-11-01 Tue 23:04]

** DONE [#B] view_tests.py - REMOVE :removal:refactor:filmgrammar:ucb:research:code:work:
CLOSED: [2016-11-03 Thu 17:02] SCHEDULED: <2016-11-03 Thu>
:Created: [2016-11-01 Tue 23:04]

** TODO [#C] urls.py               :test:filmgrammar:ucb:research:code:work:
:Created: [2016-11-01 Tue 23:03]

** TODO [#C] views.py              :test:filmgrammar:ucb:research:code:work:
:Created: [2016-11-01 Tue 23:03]

** DONE [#B] remove model readers :refactor:filmgrammar:ucb:research:code:work:
CLOSED: [2016-11-03 Thu 17:04] SCHEDULED: <2016-11-03 Thu>
:Created: [2016-11-01 Tue 23:02]

** DONE [#B] database.py - deprecate & remove :refactor:filmgrammar:ucb:research:code:work:
CLOSED: [2016-11-03 Thu 19:46] SCHEDULED: <2016-11-03 Thu>
:Created: [2016-11-01 Tue 23:02]

** TODO [#C] shot_class.py         :test:filmgrammar:ucb:research:code:work:
:Created: [2016-11-01 Tue 23:02]

** TODO [#B] patterns.py - REFACTOR ALL OF IT :refactor:test:filmgrammar:ucb:research:code:work:
:Created: [2016-11-01 Tue 23:00]

** DONE [#B] remove classification.py :refactor:filmgrammar:ucb:research:code:work:
CLOSED: [2016-11-03 Thu 17:08] SCHEDULED: <2016-11-03 Thu>
:Created: [2016-11-01 Tue 22:59]

** TODO [#B] merge_dict empty-empty :test:filmgrammar:ucb:research:code:work:
SCHEDULED: <2016-11-23 Wed>
:Created: [2016-11-01 Tue 22:58]

** TODO [#A] merge_dict full-empty :test:filmgrammar:ucb:research:code:work:
:Created: [2016-11-01 Tue 22:58]

** TODO [#B] merge_dict full-full-no-collisions :test:filmgrammar:ucb:research:code:work:
SCHEDULED: <2016-11-23 Wed>
:Created: [2016-11-01 Tue 22:58]

** TODO [#B] merge_dict - full w/ collision :test:filmgrammar:ucb:research:code:work:
SCHEDULED: <2016-11-23 Wed>
:Created: [2016-11-01 Tue 22:57]

** TODO [#B] misc.beautiful_seconds :test:filmgrammar:ucb:research:code:work:
:Created: [2016-11-01 Tue 22:57]

** TODO [#B] misc.num needs to return float if valueerror exception thrown :test:filmgrammar:ucb:research:code:work:
:Created: [2016-11-01 Tue 22:56]

** DONE [#A] MinShotBoundaryStrength functions - remove or queue for test :refactor:filmgrammar:ucb:research:code:work:
CLOSED: [2016-11-28 Mon 15:01] SCHEDULED: <2016-11-22 Tue>
:Created: [2016-11-01 Tue 22:55]

** DONE [#B] shot_to_database - remove? :refactor:filmgrammar:ucb:research:code:work:
CLOSED: [2016-11-03 Thu 17:09] SCHEDULED: <2016-11-03 Thu>
:Created: [2016-11-01 Tue 22:55]

** TODO [#B] MinShotBoundaryStrength.update_minimum_strength() :test:filmgrammar:ucb:research:code:work:
:Created: [2016-11-01 Tue 22:54]

** DONE [#B] remove Shot.shot_classifier()? :refactor:filmgrammar:ucb:research:code:work:
CLOSED: [2016-11-03 Thu 17:14] SCHEDULED: <2016-11-03 Thu>
:Created: [2016-11-01 Tue 22:53]

** TODO [#B] frame.faces should return an array of all faces in this frame :test:filmgrammar:ucb:research:code:work:
:Created: [2016-11-01 Tue 22:53]

** DONE [#B] Frame.__str__ should return 'pk: %d' % private key :test:filmgrammar:ucb:research:code:work:
CLOSED: [2016-11-28 Mon 15:00] SCHEDULED: <2016-11-22 Tue>
:Created: [2016-11-01 Tue 22:52]

** TODO [#B] Movie.shots should return shot array with all frames from movie :test:filmgrammar:ucb:research:code:work:
:Created: [2016-11-01 Tue 22:50]

** TODO [#B] Movie model should return frame objects :test:filmgrammar:ucb:research:code:work:
:Created: [2016-11-01 Tue 22:50]

** TODO [#B] get_media_file() should return proper default video path if a video cannot be found :test:filmgrammar:ucb:research:code:work:
:Created: [2016-11-01 Tue 22:48]

** TODO [#B] MovieComponentLoader().get_movie_title returns empty title if package isn't in keys :test:filmgrammar:ucb:research:code:work:
:Created: [2016-11-01 Tue 22:47]

** TODO [#B] ParentLoader().extract_child_data should return empty if child_name not in data :test:filmgrammar:ucb:research:code:work:
:Created: [2016-11-01 Tue 22:46]

** DONE [#B] This is a test - Delete me.::
CLOSED: [2016-11-01 Tue 22:45]
:Created: [2016-11-01 Tue 22:43]

** TODO [#B] BaseClassifier().append_dictionaries does nothing - remove? :ucb:research:filmgrammar:test:code:work:research:
:PROPERTIES:
:Created: [2016-11-01 Tue 22:36]
:END:

** TODO [#B] MovieConverter to_video_directory returns title if already directory :test:ucb:filmgrammar:web:research:
:PROPERTIES:
:Created: [2016-11-01 Tue 22:32]
:END:

		
* Berkeley                                                :ucb:work:research:
** Film Grammar                                                :filmgrammar:
*** Web Development                                                   :web:
**** General
***** DONE [#A] Bulk Package Loading                   
CLOSED: [2016-11-21 Mon 18:37] SCHEDULED: <2016-11-03 Thu>
***** DONE Fix Pattern Finding Count    
	 CLOSED: [2016-09-22 Thu 18:58]
***** DONE Fix Pattern Location Finder  
	 CLOSED: [2016-10-21 Fri 16:57]
****** DONE Min & Max length are not working 
	  CLOSED: [2016-09-22 Thu 17:18]
****** DONE Pattern Locations appear Broken 
	  CLOSED: [2016-09-23 Fri 16:08]
****** DONE attributes not being passed to pattern location form 
	  CLOSED: [2016-09-24 Sat 16:08]
***** DONE Try finding patterns & Update interface as needed 
****** DONE Add 'exclude n/a' button   
***** TODO [#C] Create Pattern Representation Strip 
***** DONE Move classification functions to a set of classes 
CLOSED: [2016-11-02 Wed 14:36]
****** (Classification
****** FrameClassification(Classification)
****** and ShotClassification(FrameClassification))
***** TODO [#B] Get mean, median, & mode classifiers into factories 
***** TODO [#B] Put representative frame into factories 
***** TODO [#C] Add Filtering           
******* DONE Shot Detections          
	   CLOSED: [2016-09-26 Mon 15:07]
******* TODO [#C] Face Detection (& classifications therof) 

***** DONE [#B] Load up data                 
CLOSED: [2016-11-21 Mon 18:41]
***** DONE [#A] Optimize Code           
CLOSED: [2016-11-01 Tue 22:24]
****** DONE Why is shot classification not working? 
**** Tests                                                          :test:
***** DONE ClassificationFactory.classify(frames) returns classification 
	 CLOSED: [2016-10-26 Wed 22:15] :test:
***** DONE MeanClassificationFactory.classify(frames) returns classification 
	 CLOSED: [2016-10-26 Wed 22:15]
***** DONE MedianClassificationFactory.classify(frames) returns classification 
	 CLOSED: [2016-10-26 Wed 22:15]
***** DONE ClassificationFactory.get_class_from_frame 
***** DONE ClassificationFactory.get_m_c_cu() 
***** DONE ClassificationFactory.is_instance() 
***** DONE ClassificationFactory.get_b_r_ls() returns classification 
***** DONE frame.zoom is instance of zoom 
	 CLOSED: [2016-10-21 Fri 20:27]
***** DONE frame.count is instance of count 
	 CLOSED: [2016-10-21 Fri 20:27]
***** DONE frame.h_pos is instance of h_pos 
	 CLOSED: [2016-10-21 Fri 20:28]
***** DONE frame.v_pos is instance of v_pos 
	 CLOSED: [2016-10-21 Fri 20:28]
***** DONE face.zoom is instance of zoom 
	 CLOSED: [2016-10-21 Fri 20:30]
***** DONE face.count is instance of count 
	 CLOSED: [2016-10-21 Fri 20:30]

***** DONE face.h_pos is instance of h_pos 
	 CLOSED: [2016-10-21 Fri 20:30]

***** DONE face.v_pos is instance of v_pos 
	 CLOSED: [2016-10-21 Fri 20:30]
***** DONE zoom __str__ is the text field 
	 CLOSED: [2016-10-21 Fri 20:41]
***** DONE v_pos __str__ is the text field 
	 CLOSED: [2016-10-21 Fri 20:41]
***** DONE h_pos __str__ is the text field 
	 CLOSED: [2016-10-21 Fri 20:41]
***** DONE count __str__ is the text field 
	 CLOSED: [2016-10-21 Fri 20:41]
***** TODO [#B] FrameComparitor - returns best candidate frame for classification :test:
***** DONE MovieFactory.get_or_create_default() creates a default movie 
	 CLOSED: [2016-10-22 Sat 20:03]
***** DONE MovieFactory.get_default_args() returns movie defaults 
	 CLOSED: [2016-10-22 Sat 20:03]
***** DONE MovieFactory.get_or_create(args) creates a movie 
	 CLOSED: [2016-10-22 Sat 20:03]
***** DONE PackageLoader.load_frames() loads frames 
	 CLOSED: [2016-10-25 Tue 22:53]
***** DONE PackageLoader.load_shotbounds() loads shotbounds 
	 CLOSED: [2016-10-25 Tue 22:53]
***** DONE PackageLoader.load_movie() loads movie 
	 CLOSED: [2016-10-26 Wed 16:40]
***** DONE PackageLoader.load() load entire package. 
	 CLOSED: [2016-10-26 Wed 16:40]
***** DONE MovieLoader loads movie      
	 CLOSED: [2016-10-26 Wed 15:33]
***** DONE ShotBoundLoader.load() reads shot boundaries and sends to factory 
	 CLOSED: [2016-10-25 Tue 21:45]
***** DONE ShotBoundFactory.get_or_create() creates shot boundaries 
	 CLOSED: [2016-10-25 Tue 21:45]
***** DONE FrameFactory.get_or_create() creates frame 
	 CLOSED: [2016-10-22 Sat 21:26]
***** DONE FrameLoader.load_from_yaml() reads, creates, and saves frames 
	 CLOSED: [2016-10-24 Mon 18:38]
***** DONE FaceFactory.get_or_create() creates face 
	 CLOSED: [2016-10-24 Mon 19:19]
***** DONE FaceReader.read_yaml() parses yaml for face arguments 
	 CLOSED: [2016-10-25 Tue 19:14]
***** DONE FaceDeduper.dedupe() dedupes all faces 
	 CLOSED: [2016-10-25 Tue 19:14]
***** DONE FrameDeduper.dedupe() dedupes all frames 
	 CLOSED: [2016-10-25 Tue 19:14]
***** DONE ShotFactory.get_or_create_from_boundaries(boundaries) 
	 CLOSED: [2016-10-26 Wed 22:15]
***** DONE ShotFactory.get_or_create_for_movie() 
	 CLOSED: [2016-10-26 Wed 22:15]
***** TODO [#B] MinShotStrengthManager.get() returns min shot strength 
***** TODO [#B] MinShotStrengthManager.update() updates min shot strength, returns true if changed, false is same 
***** TODO [#B] Add Tests for Argument Marshaller 
SCHEDULED: <2016-11-21 Mon>
***** DONE FrameLoader.load_frame_bunch(bunch) loads faces too 
	 CLOSED: [2016-10-25 Tue 22:41]
***** DONE Abstracet Create & Get from args into highest level class 
	 CLOSED: [2016-10-26 Wed 22:16]

***** TODO [#B] REFACTOR classifiers         
***** TODO [#B] Refactor Upload All Packages 
***** DONE Shot Manager needs to be able to perform classification 
	 CLOSED: [2016-10-26 Wed 23:49]
***** TODO [#B] Test Shot Manager Classification 
***** TODO [#B] Refactor Shot Manager Classification 
*** Pipeline
**** DONE Shot Detection
	CLOSED: [2016-10-03 Mon 16:26] 
***** DONE Make Sure Shot Detection is working
	 CLOSED: [2016-09-26 Mon 15:07] 
***** DONE Add '% of max' column to output
	 CLOSED: [2016-09-26 Mon 15:07]
 
