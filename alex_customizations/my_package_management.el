
;;; Code
(require 'package)
(add-to-list 'package-archives
  '("melpa" . "http://melpa.milkbox.net/packages/") t)
(add-to-list 'package-archives '(("ELPA" . "http://tromey.com/elpa/") 
                          ("gnu" . "http://elpa.gnu.org/packages/")
                          ("marmalade" . "http://marmalade-repo.org/packages/"))) 
(package-initialize)
 
;make sure the packages are installed; if not install them
(mapc
 (lambda (package)
   (or (package-installed-p package)
       (package-install package)
   )
   )
 '
; generated by C-h v package-activated-list
(elpy s yasnippet pyvenv highlight-indentation find-file-in-project ivy company highlight-indentation highlight-indentation find-file-in-project ivy company find-file-in-project ivy company ac-anaconda dash auto-complete popup ac-clang yasnippet pos-tip auto-complete popup ac-helm popup auto-complete popup helm helm-core async popup async ac-html dash f dash s s auto-complete popup auctex auto-complete-clang auto-complete popup autopair counsel-projectile projectile pkg-info epl counsel swiper ivy cuda-mode ecb ein dash cl-generic deferred request websocket find-file-in-project ivy company es-lib exec-path-from-shell find-file-in-project ivy flx flycheck seq let-alist pkg-info epl dash jedi-direx direx jedi auto-complete popup jedi-core python-environment deferred epc ctable concurrent deferred json-rpc magit magit-popup dash async git-commit with-editor dash async dash with-editor dash async dash async magit-popup dash async markdown-mode+ markdown-mode markdown-mode matlab-mode mode-icons multiple-cursors org-dotemacs org org-mobile-sync org org-ref pdf-tools let-alist tablist f dash s s key-chord hydra ivy helm-bibtex biblio biblio-core dash seq let-alist f dash s dash s parsebib helm helm-core async popup async helm helm-core async popup async dash org-wc org-wunderlist s org alert log4e gntp request-deferred request deferred parsebib pdf-tools let-alist tablist phi-rectangle php-mode popup-complete popup pos-tip powerline pretty-lambdada projectile pkg-info epl py-autopep8 py-isort python-django python-environment deferred pyvenv rainbow-mode request-deferred request deferred s scss-mode seq smex swiper ivy tablist tidy toc-org undo-tree use-package diminish bind-key wc-mode websocket with-editor dash async yasnippet)
);; close the package automanagement function

(defun set-exec-path-from-shell-PATH ()
  "Sets the exec-path to the same value used by the user shell"
  (let ((path-from-shell
         (replace-regexp-in-string
          "[[:space:]\n]*$" ""
          (shell-command-to-string "$SHELL -l -c 'echo $PATH'"))))
    (setenv "PATH" path-from-shell)
    (setq exec-path (split-string path-from-shell path-separator))))
 
;; call function now
(unless (string-equal system-type "windows-nt") ; Microsoft Windows
    (set-exec-path-from-shell-PATH))
(provide 'my_package_management)
;;; my_package_management.el ends here
